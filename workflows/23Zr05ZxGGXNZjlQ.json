{
  "active": false,
  "connections": {
    "When clicking ‘Test workflow’": {
      "main": [
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "HTTP Request": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Google Calendar1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Edit Fields",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Edit Fields": {
      "main": [
        [
          {
            "node": "HTTP Request",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2025-01-24T08:09:03.106Z",
  "id": "23Zr05ZxGGXNZjlQ",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "amaranth calendar",
  "nodes": [
    {
      "parameters": {},
      "type": "n8n-nodes-base.manualTrigger",
      "typeVersion": 1,
      "position": [
        -460,
        -160
      ],
      "id": "f46abeb2-3ae4-4724-bc61-f61e9b7ccc2a",
      "name": "When clicking ‘Test workflow’"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "https://gw.cupix.com/schres/sc111A03",
        "sendHeaders": true,
        "headerParameters": {
          "parameters": [
            {
              "name": "Content-Type",
              "value": "={{ $json['Content-Type'] }}"
            },
            {
              "name": "authorization",
              "value": "={{ $json.authorization }}"
            },
            {
              "name": "wehago-sign",
              "value": "={{ $json['wehago-sign'] }}"
            },
            {
              "name": "transaction-id",
              "value": "={{ $json['transaction-id'] }}"
            },
            {
              "name": "timestamp",
              "value": "={{ $json.timestamp }}"
            }
          ]
        },
        "sendBody": true,
        "specifyBody": "json",
        "jsonBody": "{\n    \"companyInfo\": {\n        \"compSeq\":\"1000\",\n        \"groupSeq\":\"gcmsAmaranth37665\",\n        \"deptSeq\":\"2018\",\n        \"emailAddr\":\"andrew.ji\",\n        \"emailDomain\":\"cupix.com\"\n    },\n    \"startDate\":\"20250101\",\n    \"endDate\":\"20250630\",\n    \"mySchYn\":\"N\",\n    \"calList\":[],\n    \"tcalList\":[],\n    \"acalList\":[\"59\"],\n    \"searchEmpSeq\":\"\",\n    \"excelYn\":null,\n    \"abUID\":\"\",\n    \"sortDate\":\"Y\",\n    \"langCode\":\"kr\"\n}",
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        20,
        -180
      ],
      "id": "9349bf7c-ec0f-4f99-a819-81ce1a741ad7",
      "name": "HTTP Request"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "882f051c-b1cd-43df-a91e-2735d45bf452",
              "leftValue": "={{ $json.resultMsg }}",
              "rightValue": "SUCCESS",
              "operator": {
                "type": "string",
                "operation": "equals",
                "name": "filter.operator.equals"
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        260,
        -180
      ],
      "id": "78e7fdf0-cd32-4660-99a4-fd9b6bf89e0d",
      "name": "If"
    },
    {
      "parameters": {
        "mode": "raw",
        "jsonOutput": "{\n  \"Content-Type\": \"application/json\",\n  \"authorization\": \"Bearer gcmsAmaranth37665|2071|JRVAZTGDRtma1OVx4xrEy8IkjMeeN2\",\n  \"wehago-sign\": \"Wg4zX5n34GmzC7QWiRae1/RrV/cx0d97kbbYI3am1I0=\",\n  \"transaction-id\": \"635c9532418cd52dbf67f26320a87c05\",\n  \"timestamp\": 1738729717\n}\n",
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -200,
        -180
      ],
      "id": "f21cfedb-9d97-4d7a-8e1f-b50ad8ed5d04",
      "name": "Edit Fields"
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "c_151f59d9e273358e134b4333cdd838d3f326cc310d3480b85ca67b62fde7b0ce@group.calendar.google.com",
          "mode": "list",
          "cachedResultName": "휴가(Amaranth)"
        },
        "start": "=2025-01-29T00:00:00",
        "end": "2025-01-29T18:00:00",
        "useDefaultReminders": false,
        "additionalFields": {
          "allday": "yes",
          "summary": "={{ $json.resultData.resultList[0].schTitle }} {{ $json.resultData.resultList[0].partName }}",
          "visibility": "default"
        }
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.2,
      "position": [
        440,
        -260
      ],
      "id": "bb9b5b5b-1fd9-4474-a2c4-5adff03d448f",
      "name": "Google Calendar1",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "Ad9NdUur3xNxfM0e",
          "name": "Google Calendar account 2"
        }
      }
    },
    {
      "parameters": {
        "jsCode": "const puppeteer = require('puppeteer');\n\nconst delay = (ms) => new Promise(resolve => setTimeout(resolve, ms));\n\nasync function automate() {\n  const browser = await puppeteer.launch({\n    headless: false,\n    args: [\n      '--no-sandbox',\n      '--disable-setuid-sandbox',\n      '--disable-dev-shm-usage',\n      '--disable-accelerated-2d-canvas',\n      '--disable-gpu'\n    ],\n    defaultViewport: null\n  });\n  const page = await browser.newPage();\n\n  await page.setRequestInterception(true);\n\n  // 요청 모니터링\n  page.on('request', request => {\n    if (request.url().includes('/gw999A01')) {\n      console.log('Request:', {\n        url: request.url(),\n        method: request.method(),\n        resourceType: request.resourceType(),\n        headers: request.headers()\n      });\n    }\n    request.continue();\n  });\n\n  // page.on('response', async response => {\n  //   if (response.url().includes('/gw999A01')) {\n  //     try {\n  //       const data = await response.json();\n  //       console.log('Response Data:', data);\n  //     } catch (e) {\n  //       console.log('Not JSON response');\n  //     }\n  //   }\n  // });\n\n\n  const userId = \"andrew.ji\";\n  const userPw = \"pw\";\n  const url = \"https://gw.cupix.com/\";\n\n  // 페이지 이동\n  await page.goto(url);\n  await delay(5000); // time.sleep(5) 대체\n\n  // ID 입력\n  const idSelector = \"#reqLoginId\";\n  await page.waitForSelector(idSelector);\n  await page.type(idSelector, userId);\n\n  // 다음 버튼 클릭\n  const nextButtonSelector = \"#wrap > div.logintype-A > div.loginBox.animated1s.slideInRight > div > div:nth-child(2) > div:nth-child(4) > div.loginBtn.h-box > div > button\";\n  await page.waitForSelector(nextButtonSelector);\n  await page.click(nextButtonSelector);\n\n  await delay(5000); // time.sleep(5) 대체\n\n  // 비밀번호 입력\n  const pwInputSelector = \"#reqLoginPw\";\n  await page.waitForSelector(pwInputSelector);\n  await page.type(pwInputSelector, userPw);\n\n  // 로그인 버튼 클릭\n  const loginInputSelector = \"#wrap > div.logintype-A > div.loginBox.animated1s.slideInRight > div > div:nth-child(2) > div:nth-child(4) > div.loginBtn.h-box > div > button\";\n  await page.waitForSelector(loginInputSelector);\n  await page.click(loginInputSelector);\n\n  console.log(\"Login Success\");\n\n\n  // // 캘린더 버튼 클릭\n  // const calendarButtonSelector = \"#tangoMenu > div > ul > li.CL_ecoIcon01 > div > div.tooltipDiv\";\n  // await page.waitForSelector(calendarButtonSelector);\n  // await page.click(calendarButtonSelector);\n\n  // await delay(5000);\n\n  // // 6번 반복하여 CSV 다운로드 및 다음 달 이동\n  // for (let i = 0; i < 6; i++) {\n  //   const csvDownloadButtonSelector = \"div > div.OBTPageContainer_header__3cYmR > div.OBTPageContainer_mainButtons__VlcMh > div:nth-child(1) > button\";\n  //   await page.waitForSelector(csvDownloadButtonSelector);\n  //   await page.click(csvDownloadButtonSelector);\n\n  //   await delay(2000);\n\n  //   const nextMonthButtonSelector = \"#UEA_calendar > div > div.fc.fc-ltr.fc-unthemed > div.fc-toolbar.fc-header-toolbar > div.fc-left > div > button.fc-next-button.fc-button.fc-button-primary\";\n  //   await page.waitForSelector(nextMonthButtonSelector);\n  //   await page.click(nextMonthButtonSelector);\n  // }\n\n  // 브라우저 종료\n  // await browser.close();\n}\n\n// 함수 실행\nautomate().catch(console.error);"
      },
      "type": "n8n-nodes-base.code",
      "typeVersion": 2,
      "position": [
        -80,
        -380
      ],
      "id": "8d93d027-b7f2-47fa-badc-e12cb1aed04d",
      "name": "puppeteer"
    }
  ],
  "pinData": {},
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [],
  "triggerCount": 0,
  "updatedAt": "2025-02-05T04:32:30.000Z",
  "versionId": "905db65d-8c3f-4b28-bdb7-cc938f579346"
}