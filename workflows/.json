{
  "data": [
    {
      "createdAt": "2023-06-23T03:56:25.905Z",
      "updatedAt": "2023-06-26T01:26:47.000Z",
      "id": "1",
      "name": "PR created",
      "active": true,
      "nodes": [
        {
          "parameters": {
            "httpMethod": "POST",
            "path": "9cd4f322-5eae-4586-9790-644a87105a4b",
            "options": {}
          },
          "id": "ae0c5b6d-9328-4fb1-ae27-324bc38646a6",
          "name": "Webhook",
          "type": "n8n-nodes-base.webhook",
          "typeVersion": 1,
          "position": [
            -340,
            560
          ],
          "webhookId": "9cd4f322-5eae-4586-9790-644a87105a4b"
        },
        {
          "parameters": {
            "values": {
              "string": [
                {
                  "name": "url",
                  "value": "={{ $json.body.resource._links.web.href }}"
                },
                {
                  "name": "title",
                  "value": "={{ $json.body.resource.title }}"
                }
              ]
            },
            "options": {}
          },
          "id": "b1068d8f-03b1-442f-a628-e7efcd56b4e2",
          "name": "Set",
          "type": "n8n-nodes-base.set",
          "typeVersion": 2,
          "position": [
            -140,
            560
          ]
        },
        {
          "parameters": {
            "mode": "runOnceForEachItem",
            "jsCode": "// Extract key from title. ex) \"TSLA-1234 new pull request\" -> \"TSLA-1234\"\nvar title = $input.item.json.title;\nvar key = title.split(' ')[0];\n$input.item.json.key = key;\n\nreturn $input.item;"
          },
          "id": "0625fe0f-bce7-4803-8c79-84eb838656ef",
          "name": "Code",
          "type": "n8n-nodes-base.code",
          "typeVersion": 1,
          "position": [
            40,
            560
          ]
        },
        {
          "parameters": {
            "method": "POST",
            "url": "=https://cupixrnd.atlassian.net/rest/api/3/issue/{{ $json.key }}/remotelink",
            "authentication": "predefinedCredentialType",
            "nodeCredentialType": "jiraSoftwareCloudApi",
            "sendHeaders": true,
            "headerParameters": {
              "parameters": [
                {
                  "name": "Accept",
                  "value": "application/json"
                },
                {
                  "name": "Content-Type",
                  "value": "application/json"
                }
              ]
            },
            "sendBody": true,
            "specifyBody": "json",
            "jsonBody": "={\n    \"object\": {\n        \"url\":\"{{ $json[\"url\"] }}\",\n        \"title\":\"PR {{ $json[\"key\"] }}\"\n    }\n}",
            "options": {}
          },
          "id": "00969856-f9ff-4078-9adb-0fe8b9a86d5d",
          "name": "HTTP Request",
          "type": "n8n-nodes-base.httpRequest",
          "typeVersion": 4.1,
          "position": [
            460,
            460
          ],
          "credentials": {
            "jiraSoftwareCloudApi": {
              "id": "1",
              "name": "Jira SW Cloud account"
            }
          }
        },
        {
          "parameters": {
            "dataType": "string",
            "value1": "={{ $json.body.resource.repository.project.name }}",
            "rules": {
              "rules": [
                {
                  "value2": "cupix-api",
                  "output": 1
                },
                {
                  "operation": "contains",
                  "value2": "tesla"
                }
              ]
            }
          },
          "id": "a62d4e9d-2d54-4678-9575-6ed263068bad",
          "name": "Switch",
          "type": "n8n-nodes-base.switch",
          "typeVersion": 1,
          "position": [
            220,
            560
          ]
        },
        {
          "parameters": {
            "method": "POST",
            "url": "=https://cupixrnd.atlassian.net/rest/api/3/issue/{{ $json.key }}/remotelink",
            "authentication": "predefinedCredentialType",
            "nodeCredentialType": "jiraSoftwareCloudApi",
            "sendHeaders": true,
            "headerParameters": {
              "parameters": [
                {
                  "name": "Accept",
                  "value": "application/json"
                },
                {
                  "name": "Content-Type",
                  "value": "application/json"
                }
              ]
            },
            "sendBody": true,
            "specifyBody": "json",
            "jsonBody": "={\n    \"object\": {\n        \"url\":\"{{ $json[\"url\"] }}\",\n        \"title\":\"SDK PR {{ $json[\"key\"] }}\"\n    }\n}",
            "options": {}
          },
          "id": "1543f00d-c303-46e7-a960-43c9713f4b64",
          "name": "HTTP Request1",
          "type": "n8n-nodes-base.httpRequest",
          "typeVersion": 4.1,
          "position": [
            460,
            680
          ],
          "credentials": {
            "jiraSoftwareCloudApi": {
              "id": "1",
              "name": "Jira SW Cloud account"
            }
          }
        },
        {
          "parameters": {
            "operation": "update",
            "issueKey": "={{ $('Switch').item.json.key }}",
            "updateFields": {
              "statusId": {
                "__rl": true,
                "value": "41",
                "mode": "list",
                "cachedResultName": "In Review"
              }
            }
          },
          "id": "9664c5a7-ced3-48f8-b253-46a6038d49a5",
          "name": "Jira Software",
          "type": "n8n-nodes-base.jira",
          "typeVersion": 1,
          "position": [
            680,
            460
          ],
          "credentials": {
            "jiraSoftwareCloudApi": {
              "id": "1",
              "name": "Jira SW Cloud account"
            }
          }
        }
      ],
      "connections": {
        "Webhook": {
          "main": [
            [
              {
                "node": "Set",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Set": {
          "main": [
            [
              {
                "node": "Code",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Code": {
          "main": [
            [
              {
                "node": "Switch",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Switch": {
          "main": [
            [
              {
                "node": "HTTP Request",
                "type": "main",
                "index": 0
              }
            ],
            [
              {
                "node": "HTTP Request1",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "HTTP Request": {
          "main": [
            [
              {
                "node": "Jira Software",
                "type": "main",
                "index": 0
              }
            ]
          ]
        }
      },
      "settings": {},
      "staticData": null,
      "pinData": {
        "Webhook": [
          {
            "json": {
              "headers": {
                "x-vss-activityid": "13d3f92a-5c35-0002-aa06-ea6e969ed901",
                "x-vss-subscriptionid": "00000000-0000-0000-0000-000000000000",
                "user-agent": "VSServices/19.222.33724.7 (w3wp.exe)",
                "content-type": "application/json; charset=utf-8",
                "host": "150.230.249.206:5678",
                "request-context": "appId=cid-v1:e1fea76c-829b-40b5-a0ec-38a286d5e2c0",
                "request-id": "|ddc12fe53f07fa4f841e18091c0d4d55.6ca9b529b8ad1740.",
                "traceparent": "00-ddc12fe53f07fa4f841e18091c0d4d55-6ca9b529b8ad1740-00",
                "content-length": "4630",
                "expect": "100-continue",
                "connection": "Keep-Alive"
              },
              "params": {},
              "query": {},
              "body": {
                "subscriptionId": "00000000-0000-0000-0000-000000000000",
                "notificationId": 36,
                "id": "2ab4e3d3-b7a6-425e-92b1-5a9982c1269e",
                "eventType": "git.pullrequest.created",
                "publisherId": "tfs",
                "message": {
                  "text": "Jamal Hartnett created a new pull request",
                  "html": "Jamal Hartnett created a new pull request",
                  "markdown": "Jamal Hartnett created a new pull request"
                },
                "detailedMessage": {
                  "text": "Jamal Hartnett created a new pull request\r\n\r\n- Merge status: Succeeded\r\n- Merge commit: eef717(https://fabrikam.visualstudio.com/DefaultCollection/_apis/git/repositories/4bc14d40-c903-45e2-872e-0462c7748079/commits/eef717f69257a6333f221566c1c987dc94cc0d72)\r\n",
                  "html": "Jamal Hartnett created a new pull request\r\n<ul>\r\n<li>Merge status: Succeeded</li>\r\n<li>Merge commit: <a href=\"https://fabrikam.visualstudio.com/DefaultCollection/_apis/git/repositories/4bc14d40-c903-45e2-872e-0462c7748079/commits/eef717f69257a6333f221566c1c987dc94cc0d72\">eef717</a></li>\r\n</ul>",
                  "markdown": "Jamal Hartnett created a new pull request\r\n\r\n+ Merge status: Succeeded\r\n+ Merge commit: [eef717](https://fabrikam.visualstudio.com/DefaultCollection/_apis/git/repositories/4bc14d40-c903-45e2-872e-0462c7748079/commits/eef717f69257a6333f221566c1c987dc94cc0d72)\r\n"
                },
                "resource": {
                  "repository": {
                    "id": "4bc14d40-c903-45e2-872e-0462c7748079",
                    "name": "Fabrikam",
                    "url": "https://fabrikam.visualstudio.com/DefaultCollection/_apis/git/repositories/4bc14d40-c903-45e2-872e-0462c7748079",
                    "project": {
                      "id": "6ce954b1-ce1f-45d1-b94d-e6bf2464ba2c",
                      "name": "tesla",
                      "url": "https://fabrikam.visualstudio.com/DefaultCollection/_apis/projects/6ce954b1-ce1f-45d1-b94d-e6bf2464ba2c",
                      "state": "wellFormed",
                      "visibility": "unchanged",
                      "lastUpdateTime": "0001-01-01T00:00:00"
                    },
                    "defaultBranch": "refs/heads/master",
                    "remoteUrl": "https://fabrikam.visualstudio.com/DefaultCollection/_git/Fabrikam"
                  },
                  "pullRequestId": 1,
                  "status": "active",
                  "createdBy": {
                    "displayName": "Jamal Hartnett",
                    "url": "https://fabrikam.vssps.visualstudio.com/_apis/Identities/54d125f7-69f7-4191-904f-c5b96b6261c8",
                    "id": "54d125f7-69f7-4191-904f-c5b96b6261c8",
                    "uniqueName": "fabrikamfiber4@hotmail.com",
                    "imageUrl": "https://fabrikam.visualstudio.com/DefaultCollection/_api/_common/identityImage?id=54d125f7-69f7-4191-904f-c5b96b6261c8"
                  },
                  "creationDate": "2014-06-17T16:55:46.589889Z",
                  "title": "TSLA-5161 my test pull request",
                  "description": " - test2\r\n",
                  "sourceRefName": "refs/heads/mytopic",
                  "targetRefName": "refs/heads/master",
                  "mergeStatus": "succeeded",
                  "mergeId": "a10bb228-6ba6-4362-abd7-49ea21333dbd",
                  "lastMergeSourceCommit": {
                    "commitId": "53d54ac915144006c2c9e90d2c7d3880920db49c",
                    "url": "https://fabrikam.visualstudio.com/DefaultCollection/_apis/git/repositories/4bc14d40-c903-45e2-872e-0462c7748079/commits/53d54ac915144006c2c9e90d2c7d3880920db49c"
                  },
                  "lastMergeTargetCommit": {
                    "commitId": "a511f535b1ea495ee0c903badb68fbc83772c882",
                    "url": "https://fabrikam.visualstudio.com/DefaultCollection/_apis/git/repositories/4bc14d40-c903-45e2-872e-0462c7748079/commits/a511f535b1ea495ee0c903badb68fbc83772c882"
                  },
                  "lastMergeCommit": {
                    "commitId": "eef717f69257a6333f221566c1c987dc94cc0d72",
                    "url": "https://fabrikam.visualstudio.com/DefaultCollection/_apis/git/repositories/4bc14d40-c903-45e2-872e-0462c7748079/commits/eef717f69257a6333f221566c1c987dc94cc0d72"
                  },
                  "reviewers": [
                    {
                      "reviewerUrl": null,
                      "vote": 0,
                      "displayName": "[Mobile]\\Mobile Team",
                      "url": "https://fabrikam.vssps.visualstudio.com/_apis/Identities/2ea2d095-48f9-4cd6-9966-62f6f574096c",
                      "id": "2ea2d095-48f9-4cd6-9966-62f6f574096c",
                      "uniqueName": "vstfs:///Classification/TeamProject/f0811a3b-8c8a-4e43-a3bf-9a049b4835bd\\Mobile Team",
                      "imageUrl": "https://fabrikam.visualstudio.com/DefaultCollection/_api/_common/identityImage?id=2ea2d095-48f9-4cd6-9966-62f6f574096c",
                      "isContainer": true
                    }
                  ],
                  "commits": [
                    {
                      "commitId": "53d54ac915144006c2c9e90d2c7d3880920db49c",
                      "url": "https://fabrikam.visualstudio.com/DefaultCollection/_apis/git/repositories/4bc14d40-c903-45e2-872e-0462c7748079/commits/53d54ac915144006c2c9e90d2c7d3880920db49c"
                    }
                  ],
                  "url": "https://fabrikam.visualstudio.com/DefaultCollection/_apis/git/repositories/4bc14d40-c903-45e2-872e-0462c7748079/pullRequests/1",
                  "_links": {
                    "web": {
                      "href": "https://fabrikam.visualstudio.com/DefaultCollection/_git/Fabrikam/pullrequest/1#view=discussion"
                    },
                    "statuses": {
                      "href": "https://fabrikam.visualstudio.com/DefaultCollection/_apis/git/repositories/4bc14d40-c903-45e2-872e-0462c7748079/pullRequests/1/statuses"
                    }
                  }
                },
                "resourceVersion": "1.0",
                "resourceContainers": {
                  "collection": {
                    "id": "c12d0eb8-e382-443b-9f9c-c52cba5014c2"
                  },
                  "account": {
                    "id": "f844ec47-a9db-4511-8281-8b63f4eaf94e"
                  },
                  "project": {
                    "id": "be9b3917-87e6-42a4-a549-2bc06a7a878f"
                  }
                },
                "createdDate": "2023-06-18T05:54:54.5539718Z"
              }
            }
          }
        ]
      },
      "versionId": "c8b03a76-47fc-4acf-ba7b-ea2329902ada",
      "triggerCount": 1,
      "tags": []
    },
    {
      "createdAt": "2023-06-23T03:58:42.428Z",
      "updatedAt": "2023-06-23T04:09:06.000Z",
      "id": "2",
      "name": "Github Backup",
      "active": false,
      "nodes": [
        {
          "parameters": {},
          "id": "982e9f4e-5422-4b82-b1fd-7a0c369b2422",
          "name": "On clicking 'execute'",
          "type": "n8n-nodes-base.manualTrigger",
          "position": [
            -1945,
            395
          ],
          "typeVersion": 1
        },
        {
          "parameters": {
            "resource": "file",
            "operation": "get",
            "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
            "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
            "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$json[\"name\"]}}.json",
            "asBinaryProperty": false,
            "additionalParameters": {}
          },
          "id": "90f6e59d-45a1-4bcb-8e0f-6651ab649b1f",
          "name": "GitHub",
          "type": "n8n-nodes-base.github",
          "position": [
            -1100,
            360
          ],
          "typeVersion": 1,
          "alwaysOutputData": true,
          "credentials": {
            "githubApi": {
              "id": "2",
              "name": "GitHub account"
            }
          },
          "continueOnFail": true
        },
        {
          "parameters": {
            "dataType": "string",
            "value1": "={{$json[\"github_status\"]}}",
            "rules": {
              "rules": [
                {
                  "value2": "same"
                },
                {
                  "value2": "different",
                  "output": 1
                },
                {
                  "value2": "new",
                  "output": 2
                }
              ]
            }
          },
          "id": "6c5434a2-60fa-4a9c-8e2e-335b1c839740",
          "name": "github_status",
          "type": "n8n-nodes-base.switch",
          "position": [
            -460,
            500
          ],
          "typeVersion": 1
        },
        {
          "parameters": {},
          "id": "2d3ade68-05f6-44c7-a990-1f73abaed744",
          "name": "same",
          "type": "n8n-nodes-base.noOp",
          "position": [
            -220,
            300
          ],
          "typeVersion": 1
        },
        {
          "parameters": {},
          "id": "8adb5364-af6a-437f-bb97-e5a70ad94e3e",
          "name": "different",
          "type": "n8n-nodes-base.noOp",
          "position": [
            -220,
            500
          ],
          "typeVersion": 1
        },
        {
          "parameters": {},
          "id": "ab0e92f4-dc6d-4b23-a188-88066ed8512e",
          "name": "new",
          "type": "n8n-nodes-base.noOp",
          "position": [
            -220,
            680
          ],
          "typeVersion": 1
        },
        {
          "parameters": {
            "resource": "file",
            "operation": "edit",
            "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
            "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
            "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
            "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
            "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
          },
          "id": "330a0f63-8e84-4382-8777-47ec26a01dab",
          "name": "GitHub Edit",
          "type": "n8n-nodes-base.github",
          "position": [
            -40,
            500
          ],
          "typeVersion": 1,
          "credentials": {
            "githubApi": {
              "id": "2",
              "name": "GitHub account"
            }
          }
        },
        {
          "parameters": {
            "resource": "file",
            "owner": "={{$node[\"Globals\"].json[\"repo\"][\"owner\"]}}",
            "repository": "={{$node[\"Globals\"].json[\"repo\"][\"name\"]}}",
            "filePath": "={{$node[\"Globals\"].json[\"repo\"][\"path\"]}}{{$node[\"OneAtATime\"].json[\"name\"]}}.json",
            "fileContent": "={{$node[\"isDiffOrNew\"].json[\"n8n_data_stringy\"]}}",
            "commitMessage": "=[N8N Backup] {{$node[\"OneAtATime\"].json[\"name\"]}}.json ({{$json[\"github_status\"]}})"
          },
          "id": "6834b81b-0ba2-473e-b195-f35d9e8f9b4c",
          "name": "GitHub Create",
          "type": "n8n-nodes-base.github",
          "position": [
            -40,
            680
          ],
          "typeVersion": 1,
          "credentials": {
            "githubApi": {
              "id": "2",
              "name": "GitHub account"
            }
          }
        },
        {
          "parameters": {
            "batchSize": 1,
            "options": {}
          },
          "id": "83c2544c-c426-40ef-9d47-c20c63a3961b",
          "name": "OneAtATime",
          "type": "n8n-nodes-base.splitInBatches",
          "position": [
            -1320,
            520
          ],
          "typeVersion": 1
        },
        {
          "parameters": {
            "values": {
              "string": [
                {
                  "name": "repo.owner",
                  "value": "dominikoh"
                },
                {
                  "name": "repo.name",
                  "value": "n8n-workflows"
                },
                {
                  "name": "repo.path",
                  "value": "workflows/"
                }
              ]
            },
            "options": {}
          },
          "id": "12cd0a81-86e7-457d-a9c8-b30f8991b96e",
          "name": "Globals",
          "type": "n8n-nodes-base.set",
          "position": [
            -1760,
            520
          ],
          "typeVersion": 1
        },
        {
          "parameters": {
            "triggerTimes": {
              "item": [
                {
                  "mode": "everyX",
                  "value": 12
                }
              ]
            }
          },
          "id": "4a2b45ab-2ff6-4991-9f42-136fec62a46d",
          "name": "Every 12 hours",
          "type": "n8n-nodes-base.cron",
          "position": [
            -1945,
            655
          ],
          "typeVersion": 1
        },
        {
          "parameters": {
            "content": "## Workflow Backups\nThis workflow will automatically backup your workflows to your Github account every 12 hours.\n\n### Setup\nOpen Globals and update the values below\n**repo.owner:** This is your Github username\n**repo.name:** This is the name of your repository\n**repo.path:** This is the folder to use within the repository, If it doesn't exist it will be created.\n\nIf your username was `n8n-io` and your repository was called `n8n-backups` and you wanted the workflows to go into a `workflows` folder you would set:\n\nrepo.owner - n8n-io\nrepo.name - n8n-backups\nrepo.path - workflows",
            "height": 464.79920462713443,
            "width": 389.78906250000017
          },
          "id": "f7634000-e46c-4b1f-b93b-c78d0b013f62",
          "name": "Note",
          "type": "n8n-nodes-base.stickyNote",
          "position": [
            -2400,
            300
          ],
          "typeVersion": 1
        },
        {
          "parameters": {
            "content": "## Single Item Loop\nWe process each workflow item one at a time, We first check Github to see if a file exists then we merge the Github Data and the API item so we can check if the values match in the function node `isDiffOrNew` we then set a status of `same`, `different` or `new`",
            "height": 424.04333333333386,
            "width": 755.2349999999991
          },
          "id": "442d842c-ea64-4bac-925f-311e2f097897",
          "name": "Note2",
          "type": "n8n-nodes-base.stickyNote",
          "position": [
            -1340,
            240
          ],
          "typeVersion": 1
        },
        {
          "parameters": {
            "content": "## Save the data\nUsing the switch node we work out what to do based on the previous status,  If it is the same we do nothing, If it is different we update the file in Github and if it is new we create a new file. After this is done we loop back to the Split in Batches node (OneAtAtTime) to start the process again.",
            "height": 693.9283333333326,
            "width": 666.4416666666662
          },
          "id": "38ee939d-7e6f-447e-852a-44c4ddc7a0a0",
          "name": "Note3",
          "type": "n8n-nodes-base.stickyNote",
          "position": [
            -500,
            180
          ],
          "typeVersion": 1
        },
        {
          "parameters": {
            "filters": {}
          },
          "id": "253cb30e-c946-467e-9e29-47aed14ed631",
          "name": "n8n",
          "type": "n8n-nodes-base.n8n",
          "position": [
            -1560,
            520
          ],
          "typeVersion": 1,
          "credentials": {
            "n8nApi": {
              "id": "4",
              "name": "n8n account"
            }
          }
        },
        {
          "parameters": {
            "jsCode": "// File Returned with Content\nif (Object.keys($input.all()[0].json).includes(\"content\")) {\n  // Get JSON Objects\n  var origWorkflow = JSON.parse(Buffer.from($input.all()[0].json.content, 'base64'));\n  var n8nWorkflow = $input.all()[1].json;\n  \n  // Order JSON Objects\n  var orderedOriginal = {}\n  var orderedActual = {}\n  \n  Object.keys(origWorkflow).sort().forEach(function(key) {\n    orderedOriginal[key] = origWorkflow[key];\n  });\n  \n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n\n  // Determine Difference\n  if ( JSON.stringify(orderedOriginal) === JSON.stringify(orderedActual) ) {\n    $input.all()[0].json.github_status = \"same\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n  } else {\n    $input.all()[0].json.github_status = \"different\";\n    $input.all()[0].json.content_decoded = orderedOriginal;\n    $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n  }\n// No File Returned / New Workflow\n} else {\n  // Order JSON Object\n  var n8nWorkflow = ($input.all()[1].json);\n  var orderedActual = {}\n  Object.keys(n8nWorkflow).sort().forEach(function(key) {\n    orderedActual[key] = n8nWorkflow[key];\n  });\n  \n  // Proper Formatting\n  $input.all()[0].json.github_status = \"new\";\n  $input.all()[0].json.n8n_data_stringy = JSON.stringify(orderedActual, null, 2);\n}\n\n// Return Items\nreturn $input.all();"
          },
          "id": "f94a115c-0ca4-4a7a-897a-06e64d28bbba",
          "name": "isDiffOrNew",
          "type": "n8n-nodes-base.code",
          "position": [
            -700,
            500
          ],
          "typeVersion": 1
        },
        {
          "parameters": {},
          "id": "6d0d2116-17e8-45b7-a07b-a59a2dfa1e5f",
          "name": "Merge",
          "type": "n8n-nodes-base.merge",
          "position": [
            -880,
            500
          ],
          "typeVersion": 2
        }
      ],
      "connections": {
        "n8n": {
          "main": [
            [
              {
                "node": "OneAtATime",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "new": {
          "main": [
            [
              {
                "node": "GitHub Create",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "same": {
          "main": [
            [
              {
                "node": "OneAtATime",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Merge": {
          "main": [
            [
              {
                "node": "isDiffOrNew",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "GitHub": {
          "main": [
            [
              {
                "node": "Merge",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Globals": {
          "main": [
            [
              {
                "node": "n8n",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "different": {
          "main": [
            [
              {
                "node": "GitHub Edit",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "OneAtATime": {
          "main": [
            [
              {
                "node": "GitHub",
                "type": "main",
                "index": 0
              },
              {
                "node": "Merge",
                "type": "main",
                "index": 1
              }
            ]
          ]
        },
        "GitHub Edit": {
          "main": [
            [
              {
                "node": "OneAtATime",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "isDiffOrNew": {
          "main": [
            [
              {
                "node": "github_status",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "GitHub Create": {
          "main": [
            [
              {
                "node": "OneAtATime",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "github_status": {
          "main": [
            [
              {
                "node": "same",
                "type": "main",
                "index": 0
              }
            ],
            [
              {
                "node": "different",
                "type": "main",
                "index": 0
              }
            ],
            [
              {
                "node": "new",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "Every 12 hours": {
          "main": [
            [
              {
                "node": "Globals",
                "type": "main",
                "index": 0
              }
            ]
          ]
        },
        "On clicking 'execute'": {
          "main": [
            [
              {
                "node": "Globals",
                "type": "main",
                "index": 0
              }
            ]
          ]
        }
      },
      "settings": {},
      "staticData": null,
      "pinData": {},
      "versionId": "53c28fb8-4218-4e8c-88d8-d52b1d831189",
      "triggerCount": 0,
      "tags": []
    }
  ],
  "nextCursor": null
}